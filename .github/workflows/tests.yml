name: CI
on:
  pull_request:
  push:
    branches:
      - 'master'
jobs:
  test_compatibility:
    runs-on: ubuntu-latest
    env:
      PORT_LDAP: 3389
      PORT_LDAPS: 6363
      LDAP_ADMIN_PASSWORD: ${{ secrets.LDAP_ADMIN_PASSWORD }}
      LDAP_LOG_LEVEL: 0

    name: Check compatibility with 7.4
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: ldap
      - name: install dependencies
        run: composer install
      - name: install tools
        run: composer require --dev phpcompatibility/php-compatibility
      - name: Run Compatibility check
        run: ./vendor/bin/phpcs --standard=phpcs-version-check.xml
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # operating-system: [ubuntu-latest, windows-latest, macos-latest]
        php-versions: [ '7.4', '8.0', '8.1', '8.2', '8.3', '8.4' ]
    name: Lint on ${{ matrix.php-versions }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ldap
      - name: install dependencies
        run: |
          composer require --dev php-parallel-lint/php-parallel-lint
      - name: Lint source files
        run: ./vendor/bin/parallel-lint . --exclude vendor --exclude wordbless
  test:
    runs-on: ubuntu-latest
    env:
      PORT_LDAP: 3389
      PORT_LDAPS: 6363
      LDAP_ADMIN_PASSWORD: ${{ secrets.LDAP_ADMIN_PASSWORD }}
      LDAP_LOG_LEVEL: 0
    strategy:
      matrix:
        # operating-system: [ubuntu-latest, windows-latest, macos-latest]
        php-versions: [ '7.4', '8.0', '8.1', '8.2', '8.3', '8.4' ]
    name: Test on ${{ matrix.php-versions }}
    steps:
      - uses: actions/checkout@v4
      - uses: jpribyl/action-docker-layer-caching@v0.1.1
        continue-on-error: true
      - name: Build the docker compose stack
        run: docker compose -f compose.yml up -d db openldap
      - name: Check running containers
        run: docker ps -a
      - name: Check logs
        run: docker compose logs openldap
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: ldap
      - name: install dependencies
        run: composer install
      - name: install tools
        run: composer require --dev phpunit/phpunit
      - name: Run Unit-Tests
        run: ./vendor/bin/phpunit --testdox
  coverage:
    needs: test
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          coverage: xdebug
      - name: install dependencies
        run: composer install
      - name: install tools
        run: composer require --dev phpunit/phpunit
      - name: run testsuite
        run: ./vendor/bin/phpunit --testdox --colors=always --coverage-junit junit.xml
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
